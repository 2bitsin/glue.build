#ifndef LVL1_GL_VERSION_ES_CM_1_0_BASE_HPP
#define LVL1_GL_VERSION_ES_CM_1_0_BASE_HPP
#include "../../function.hpp"
#include "../../types.hpp"
#include <functional>

namespace glue::lvl1
{
	inline namespace base_1_0 
	{
		struct api
		{
			/* 	=============
					constants
					============= */
		public:
			static constexpr auto GL_VERSION_ES_CL_1_0 = 1;
			static constexpr auto GL_VERSION_ES_CM_1_1 = 1;
			static constexpr auto GL_VERSION_ES_CL_1_1 = 1;
			static constexpr auto GL_DEPTH_BUFFER_BIT = 0x00000100;
			static constexpr auto GL_STENCIL_BUFFER_BIT = 0x00000400;
			static constexpr auto GL_COLOR_BUFFER_BIT = 0x00004000;
			static constexpr auto GL_FALSE = 0;
			static constexpr auto GL_TRUE = 1;
			static constexpr auto GL_POINTS = 0x0000;
			static constexpr auto GL_LINES = 0x0001;
			static constexpr auto GL_LINE_LOOP = 0x0002;
			static constexpr auto GL_LINE_STRIP = 0x0003;
			static constexpr auto GL_TRIANGLES = 0x0004;
			static constexpr auto GL_TRIANGLE_STRIP = 0x0005;
			static constexpr auto GL_TRIANGLE_FAN = 0x0006;
			static constexpr auto GL_NEVER = 0x0200;
			static constexpr auto GL_LESS = 0x0201;
			static constexpr auto GL_EQUAL = 0x0202;
			static constexpr auto GL_LEQUAL = 0x0203;
			static constexpr auto GL_GREATER = 0x0204;
			static constexpr auto GL_NOTEQUAL = 0x0205;
			static constexpr auto GL_GEQUAL = 0x0206;
			static constexpr auto GL_ALWAYS = 0x0207;
			static constexpr auto GL_ZERO = 0;
			static constexpr auto GL_ONE = 1;
			static constexpr auto GL_SRC_COLOR = 0x0300;
			static constexpr auto GL_ONE_MINUS_SRC_COLOR = 0x0301;
			static constexpr auto GL_SRC_ALPHA = 0x0302;
			static constexpr auto GL_ONE_MINUS_SRC_ALPHA = 0x0303;
			static constexpr auto GL_DST_ALPHA = 0x0304;
			static constexpr auto GL_ONE_MINUS_DST_ALPHA = 0x0305;
			static constexpr auto GL_DST_COLOR = 0x0306;
			static constexpr auto GL_ONE_MINUS_DST_COLOR = 0x0307;
			static constexpr auto GL_SRC_ALPHA_SATURATE = 0x0308;
			static constexpr auto GL_CLIP_PLANE0 = 0x3000;
			static constexpr auto GL_CLIP_PLANE1 = 0x3001;
			static constexpr auto GL_CLIP_PLANE2 = 0x3002;
			static constexpr auto GL_CLIP_PLANE3 = 0x3003;
			static constexpr auto GL_CLIP_PLANE4 = 0x3004;
			static constexpr auto GL_CLIP_PLANE5 = 0x3005;
			static constexpr auto GL_FRONT = 0x0404;
			static constexpr auto GL_BACK = 0x0405;
			static constexpr auto GL_FRONT_AND_BACK = 0x0408;
			static constexpr auto GL_FOG = 0x0B60;
			static constexpr auto GL_LIGHTING = 0x0B50;
			static constexpr auto GL_TEXTURE_2D = 0x0DE1;
			static constexpr auto GL_CULL_FACE = 0x0B44;
			static constexpr auto GL_ALPHA_TEST = 0x0BC0;
			static constexpr auto GL_BLEND = 0x0BE2;
			static constexpr auto GL_COLOR_LOGIC_OP = 0x0BF2;
			static constexpr auto GL_DITHER = 0x0BD0;
			static constexpr auto GL_STENCIL_TEST = 0x0B90;
			static constexpr auto GL_DEPTH_TEST = 0x0B71;
			static constexpr auto GL_POINT_SMOOTH = 0x0B10;
			static constexpr auto GL_LINE_SMOOTH = 0x0B20;
			static constexpr auto GL_SCISSOR_TEST = 0x0C11;
			static constexpr auto GL_COLOR_MATERIAL = 0x0B57;
			static constexpr auto GL_NORMALIZE = 0x0BA1;
			static constexpr auto GL_RESCALE_NORMAL = 0x803A;
			static constexpr auto GL_VERTEX_ARRAY = 0x8074;
			static constexpr auto GL_NORMAL_ARRAY = 0x8075;
			static constexpr auto GL_COLOR_ARRAY = 0x8076;
			static constexpr auto GL_TEXTURE_COORD_ARRAY = 0x8078;
			static constexpr auto GL_MULTISAMPLE = 0x809D;
			static constexpr auto GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
			static constexpr auto GL_SAMPLE_ALPHA_TO_ONE = 0x809F;
			static constexpr auto GL_SAMPLE_COVERAGE = 0x80A0;
			static constexpr auto GL_NO_ERROR = 0;
			static constexpr auto GL_INVALID_ENUM = 0x0500;
			static constexpr auto GL_INVALID_VALUE = 0x0501;
			static constexpr auto GL_INVALID_OPERATION = 0x0502;
			static constexpr auto GL_STACK_OVERFLOW = 0x0503;
			static constexpr auto GL_STACK_UNDERFLOW = 0x0504;
			static constexpr auto GL_OUT_OF_MEMORY = 0x0505;
			static constexpr auto GL_EXP = 0x0800;
			static constexpr auto GL_EXP2 = 0x0801;
			static constexpr auto GL_FOG_DENSITY = 0x0B62;
			static constexpr auto GL_FOG_START = 0x0B63;
			static constexpr auto GL_FOG_END = 0x0B64;
			static constexpr auto GL_FOG_MODE = 0x0B65;
			static constexpr auto GL_FOG_COLOR = 0x0B66;
			static constexpr auto GL_CW = 0x0900;
			static constexpr auto GL_CCW = 0x0901;
			static constexpr auto GL_CURRENT_COLOR = 0x0B00;
			static constexpr auto GL_CURRENT_NORMAL = 0x0B02;
			static constexpr auto GL_CURRENT_TEXTURE_COORDS = 0x0B03;
			static constexpr auto GL_POINT_SIZE = 0x0B11;
			static constexpr auto GL_POINT_SIZE_MIN = 0x8126;
			static constexpr auto GL_POINT_SIZE_MAX = 0x8127;
			static constexpr auto GL_POINT_FADE_THRESHOLD_SIZE = 0x8128;
			static constexpr auto GL_POINT_DISTANCE_ATTENUATION = 0x8129;
			static constexpr auto GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12;
			static constexpr auto GL_LINE_WIDTH = 0x0B21;
			static constexpr auto GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22;
			static constexpr auto GL_ALIASED_POINT_SIZE_RANGE = 0x846D;
			static constexpr auto GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;
			static constexpr auto GL_CULL_FACE_MODE = 0x0B45;
			static constexpr auto GL_FRONT_FACE = 0x0B46;
			static constexpr auto GL_SHADE_MODEL = 0x0B54;
			static constexpr auto GL_DEPTH_RANGE = 0x0B70;
			static constexpr auto GL_DEPTH_WRITEMASK = 0x0B72;
			static constexpr auto GL_DEPTH_CLEAR_VALUE = 0x0B73;
			static constexpr auto GL_DEPTH_FUNC = 0x0B74;
			static constexpr auto GL_STENCIL_CLEAR_VALUE = 0x0B91;
			static constexpr auto GL_STENCIL_FUNC = 0x0B92;
			static constexpr auto GL_STENCIL_VALUE_MASK = 0x0B93;
			static constexpr auto GL_STENCIL_FAIL = 0x0B94;
			static constexpr auto GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95;
			static constexpr auto GL_STENCIL_PASS_DEPTH_PASS = 0x0B96;
			static constexpr auto GL_STENCIL_REF = 0x0B97;
			static constexpr auto GL_STENCIL_WRITEMASK = 0x0B98;
			static constexpr auto GL_MATRIX_MODE = 0x0BA0;
			static constexpr auto GL_VIEWPORT = 0x0BA2;
			static constexpr auto GL_MODELVIEW_STACK_DEPTH = 0x0BA3;
			static constexpr auto GL_PROJECTION_STACK_DEPTH = 0x0BA4;
			static constexpr auto GL_TEXTURE_STACK_DEPTH = 0x0BA5;
			static constexpr auto GL_MODELVIEW_MATRIX = 0x0BA6;
			static constexpr auto GL_PROJECTION_MATRIX = 0x0BA7;
			static constexpr auto GL_TEXTURE_MATRIX = 0x0BA8;
			static constexpr auto GL_ALPHA_TEST_FUNC = 0x0BC1;
			static constexpr auto GL_ALPHA_TEST_REF = 0x0BC2;
			static constexpr auto GL_BLEND_DST = 0x0BE0;
			static constexpr auto GL_BLEND_SRC = 0x0BE1;
			static constexpr auto GL_LOGIC_OP_MODE = 0x0BF0;
			static constexpr auto GL_SCISSOR_BOX = 0x0C10;
			static constexpr auto GL_COLOR_CLEAR_VALUE = 0x0C22;
			static constexpr auto GL_COLOR_WRITEMASK = 0x0C23;
			static constexpr auto GL_MAX_LIGHTS = 0x0D31;
			static constexpr auto GL_MAX_CLIP_PLANES = 0x0D32;
			static constexpr auto GL_MAX_TEXTURE_SIZE = 0x0D33;
			static constexpr auto GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36;
			static constexpr auto GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38;
			static constexpr auto GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39;
			static constexpr auto GL_MAX_VIEWPORT_DIMS = 0x0D3A;
			static constexpr auto GL_MAX_TEXTURE_UNITS = 0x84E2;
			static constexpr auto GL_SUBPIXEL_BITS = 0x0D50;
			static constexpr auto GL_RED_BITS = 0x0D52;
			static constexpr auto GL_GREEN_BITS = 0x0D53;
			static constexpr auto GL_BLUE_BITS = 0x0D54;
			static constexpr auto GL_ALPHA_BITS = 0x0D55;
			static constexpr auto GL_DEPTH_BITS = 0x0D56;
			static constexpr auto GL_STENCIL_BITS = 0x0D57;
			static constexpr auto GL_POLYGON_OFFSET_UNITS = 0x2A00;
			static constexpr auto GL_POLYGON_OFFSET_FILL = 0x8037;
			static constexpr auto GL_POLYGON_OFFSET_FACTOR = 0x8038;
			static constexpr auto GL_TEXTURE_BINDING_2D = 0x8069;
			static constexpr auto GL_VERTEX_ARRAY_SIZE = 0x807A;
			static constexpr auto GL_VERTEX_ARRAY_TYPE = 0x807B;
			static constexpr auto GL_VERTEX_ARRAY_STRIDE = 0x807C;
			static constexpr auto GL_NORMAL_ARRAY_TYPE = 0x807E;
			static constexpr auto GL_NORMAL_ARRAY_STRIDE = 0x807F;
			static constexpr auto GL_COLOR_ARRAY_SIZE = 0x8081;
			static constexpr auto GL_COLOR_ARRAY_TYPE = 0x8082;
			static constexpr auto GL_COLOR_ARRAY_STRIDE = 0x8083;
			static constexpr auto GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088;
			static constexpr auto GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089;
			static constexpr auto GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A;
			static constexpr auto GL_VERTEX_ARRAY_POINTER = 0x808E;
			static constexpr auto GL_NORMAL_ARRAY_POINTER = 0x808F;
			static constexpr auto GL_COLOR_ARRAY_POINTER = 0x8090;
			static constexpr auto GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092;
			static constexpr auto GL_SAMPLE_BUFFERS = 0x80A8;
			static constexpr auto GL_SAMPLES = 0x80A9;
			static constexpr auto GL_SAMPLE_COVERAGE_VALUE = 0x80AA;
			static constexpr auto GL_SAMPLE_COVERAGE_INVERT = 0x80AB;
			static constexpr auto GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;
			static constexpr auto GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;
			static constexpr auto GL_DONT_CARE = 0x1100;
			static constexpr auto GL_FASTEST = 0x1101;
			static constexpr auto GL_NICEST = 0x1102;
			static constexpr auto GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50;
			static constexpr auto GL_POINT_SMOOTH_HINT = 0x0C51;
			static constexpr auto GL_LINE_SMOOTH_HINT = 0x0C52;
			static constexpr auto GL_FOG_HINT = 0x0C54;
			static constexpr auto GL_GENERATE_MIPMAP_HINT = 0x8192;
			static constexpr auto GL_LIGHT_MODEL_AMBIENT = 0x0B53;
			static constexpr auto GL_LIGHT_MODEL_TWO_SIDE = 0x0B52;
			static constexpr auto GL_AMBIENT = 0x1200;
			static constexpr auto GL_DIFFUSE = 0x1201;
			static constexpr auto GL_SPECULAR = 0x1202;
			static constexpr auto GL_POSITION = 0x1203;
			static constexpr auto GL_SPOT_DIRECTION = 0x1204;
			static constexpr auto GL_SPOT_EXPONENT = 0x1205;
			static constexpr auto GL_SPOT_CUTOFF = 0x1206;
			static constexpr auto GL_CONSTANT_ATTENUATION = 0x1207;
			static constexpr auto GL_LINEAR_ATTENUATION = 0x1208;
			static constexpr auto GL_QUADRATIC_ATTENUATION = 0x1209;
			static constexpr auto GL_BYTE = 0x1400;
			static constexpr auto GL_UNSIGNED_BYTE = 0x1401;
			static constexpr auto GL_SHORT = 0x1402;
			static constexpr auto GL_UNSIGNED_SHORT = 0x1403;
			static constexpr auto GL_FLOAT = 0x1406;
			static constexpr auto GL_FIXED = 0x140C;
			static constexpr auto GL_CLEAR = 0x1500;
			static constexpr auto GL_AND = 0x1501;
			static constexpr auto GL_AND_REVERSE = 0x1502;
			static constexpr auto GL_COPY = 0x1503;
			static constexpr auto GL_AND_INVERTED = 0x1504;
			static constexpr auto GL_NOOP = 0x1505;
			static constexpr auto GL_XOR = 0x1506;
			static constexpr auto GL_OR = 0x1507;
			static constexpr auto GL_NOR = 0x1508;
			static constexpr auto GL_EQUIV = 0x1509;
			static constexpr auto GL_INVERT = 0x150A;
			static constexpr auto GL_OR_REVERSE = 0x150B;
			static constexpr auto GL_COPY_INVERTED = 0x150C;
			static constexpr auto GL_OR_INVERTED = 0x150D;
			static constexpr auto GL_NAND = 0x150E;
			static constexpr auto GL_SET = 0x150F;
			static constexpr auto GL_EMISSION = 0x1600;
			static constexpr auto GL_SHININESS = 0x1601;
			static constexpr auto GL_AMBIENT_AND_DIFFUSE = 0x1602;
			static constexpr auto GL_MODELVIEW = 0x1700;
			static constexpr auto GL_PROJECTION = 0x1701;
			static constexpr auto GL_TEXTURE = 0x1702;
			static constexpr auto GL_ALPHA = 0x1906;
			static constexpr auto GL_RGB = 0x1907;
			static constexpr auto GL_RGBA = 0x1908;
			static constexpr auto GL_LUMINANCE = 0x1909;
			static constexpr auto GL_LUMINANCE_ALPHA = 0x190A;
			static constexpr auto GL_UNPACK_ALIGNMENT = 0x0CF5;
			static constexpr auto GL_PACK_ALIGNMENT = 0x0D05;
			static constexpr auto GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;
			static constexpr auto GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;
			static constexpr auto GL_UNSIGNED_SHORT_5_6_5 = 0x8363;
			static constexpr auto GL_FLAT = 0x1D00;
			static constexpr auto GL_SMOOTH = 0x1D01;
			static constexpr auto GL_KEEP = 0x1E00;
			static constexpr auto GL_REPLACE = 0x1E01;
			static constexpr auto GL_INCR = 0x1E02;
			static constexpr auto GL_DECR = 0x1E03;
			static constexpr auto GL_VENDOR = 0x1F00;
			static constexpr auto GL_RENDERER = 0x1F01;
			static constexpr auto GL_VERSION = 0x1F02;
			static constexpr auto GL_EXTENSIONS = 0x1F03;
			static constexpr auto GL_MODULATE = 0x2100;
			static constexpr auto GL_DECAL = 0x2101;
			static constexpr auto GL_ADD = 0x0104;
			static constexpr auto GL_TEXTURE_ENV_MODE = 0x2200;
			static constexpr auto GL_TEXTURE_ENV_COLOR = 0x2201;
			static constexpr auto GL_TEXTURE_ENV = 0x2300;
			static constexpr auto GL_NEAREST = 0x2600;
			static constexpr auto GL_LINEAR = 0x2601;
			static constexpr auto GL_NEAREST_MIPMAP_NEAREST = 0x2700;
			static constexpr auto GL_LINEAR_MIPMAP_NEAREST = 0x2701;
			static constexpr auto GL_NEAREST_MIPMAP_LINEAR = 0x2702;
			static constexpr auto GL_LINEAR_MIPMAP_LINEAR = 0x2703;
			static constexpr auto GL_TEXTURE_MAG_FILTER = 0x2800;
			static constexpr auto GL_TEXTURE_MIN_FILTER = 0x2801;
			static constexpr auto GL_TEXTURE_WRAP_S = 0x2802;
			static constexpr auto GL_TEXTURE_WRAP_T = 0x2803;
			static constexpr auto GL_GENERATE_MIPMAP = 0x8191;
			static constexpr auto GL_TEXTURE0 = 0x84C0;
			static constexpr auto GL_TEXTURE1 = 0x84C1;
			static constexpr auto GL_TEXTURE2 = 0x84C2;
			static constexpr auto GL_TEXTURE3 = 0x84C3;
			static constexpr auto GL_TEXTURE4 = 0x84C4;
			static constexpr auto GL_TEXTURE5 = 0x84C5;
			static constexpr auto GL_TEXTURE6 = 0x84C6;
			static constexpr auto GL_TEXTURE7 = 0x84C7;
			static constexpr auto GL_TEXTURE8 = 0x84C8;
			static constexpr auto GL_TEXTURE9 = 0x84C9;
			static constexpr auto GL_TEXTURE10 = 0x84CA;
			static constexpr auto GL_TEXTURE11 = 0x84CB;
			static constexpr auto GL_TEXTURE12 = 0x84CC;
			static constexpr auto GL_TEXTURE13 = 0x84CD;
			static constexpr auto GL_TEXTURE14 = 0x84CE;
			static constexpr auto GL_TEXTURE15 = 0x84CF;
			static constexpr auto GL_TEXTURE16 = 0x84D0;
			static constexpr auto GL_TEXTURE17 = 0x84D1;
			static constexpr auto GL_TEXTURE18 = 0x84D2;
			static constexpr auto GL_TEXTURE19 = 0x84D3;
			static constexpr auto GL_TEXTURE20 = 0x84D4;
			static constexpr auto GL_TEXTURE21 = 0x84D5;
			static constexpr auto GL_TEXTURE22 = 0x84D6;
			static constexpr auto GL_TEXTURE23 = 0x84D7;
			static constexpr auto GL_TEXTURE24 = 0x84D8;
			static constexpr auto GL_TEXTURE25 = 0x84D9;
			static constexpr auto GL_TEXTURE26 = 0x84DA;
			static constexpr auto GL_TEXTURE27 = 0x84DB;
			static constexpr auto GL_TEXTURE28 = 0x84DC;
			static constexpr auto GL_TEXTURE29 = 0x84DD;
			static constexpr auto GL_TEXTURE30 = 0x84DE;
			static constexpr auto GL_TEXTURE31 = 0x84DF;
			static constexpr auto GL_ACTIVE_TEXTURE = 0x84E0;
			static constexpr auto GL_CLIENT_ACTIVE_TEXTURE = 0x84E1;
			static constexpr auto GL_REPEAT = 0x2901;
			static constexpr auto GL_CLAMP_TO_EDGE = 0x812F;
			static constexpr auto GL_LIGHT0 = 0x4000;
			static constexpr auto GL_LIGHT1 = 0x4001;
			static constexpr auto GL_LIGHT2 = 0x4002;
			static constexpr auto GL_LIGHT3 = 0x4003;
			static constexpr auto GL_LIGHT4 = 0x4004;
			static constexpr auto GL_LIGHT5 = 0x4005;
			static constexpr auto GL_LIGHT6 = 0x4006;
			static constexpr auto GL_LIGHT7 = 0x4007;
			static constexpr auto GL_ARRAY_BUFFER = 0x8892;
			static constexpr auto GL_ELEMENT_ARRAY_BUFFER = 0x8893;
			static constexpr auto GL_ARRAY_BUFFER_BINDING = 0x8894;
			static constexpr auto GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;
			static constexpr auto GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896;
			static constexpr auto GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897;
			static constexpr auto GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898;
			static constexpr auto GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A;
			static constexpr auto GL_STATIC_DRAW = 0x88E4;
			static constexpr auto GL_DYNAMIC_DRAW = 0x88E8;
			static constexpr auto GL_BUFFER_SIZE = 0x8764;
			static constexpr auto GL_BUFFER_USAGE = 0x8765;
			static constexpr auto GL_SUBTRACT = 0x84E7;
			static constexpr auto GL_COMBINE = 0x8570;
			static constexpr auto GL_COMBINE_RGB = 0x8571;
			static constexpr auto GL_COMBINE_ALPHA = 0x8572;
			static constexpr auto GL_RGB_SCALE = 0x8573;
			static constexpr auto GL_ADD_SIGNED = 0x8574;
			static constexpr auto GL_INTERPOLATE = 0x8575;
			static constexpr auto GL_CONSTANT = 0x8576;
			static constexpr auto GL_PRIMARY_COLOR = 0x8577;
			static constexpr auto GL_PREVIOUS = 0x8578;
			static constexpr auto GL_OPERAND0_RGB = 0x8590;
			static constexpr auto GL_OPERAND1_RGB = 0x8591;
			static constexpr auto GL_OPERAND2_RGB = 0x8592;
			static constexpr auto GL_OPERAND0_ALPHA = 0x8598;
			static constexpr auto GL_OPERAND1_ALPHA = 0x8599;
			static constexpr auto GL_OPERAND2_ALPHA = 0x859A;
			static constexpr auto GL_ALPHA_SCALE = 0x0D1C;
			static constexpr auto GL_SRC0_RGB = 0x8580;
			static constexpr auto GL_SRC1_RGB = 0x8581;
			static constexpr auto GL_SRC2_RGB = 0x8582;
			static constexpr auto GL_SRC0_ALPHA = 0x8588;
			static constexpr auto GL_SRC1_ALPHA = 0x8589;
			static constexpr auto GL_SRC2_ALPHA = 0x858A;
			static constexpr auto GL_DOT3_RGB = 0x86AE;
			static constexpr auto GL_DOT3_RGBA = 0x86AF;
			/*	=============
					functions
					============= */
		public:
			function<void(enum_t)> ActiveTexture = nullptr;
			function<void(enum_t, std::int32_t)> AlphaFuncx = nullptr;
			function<void(enum_t, std::uint32_t)> BindBuffer = nullptr;
			function<void(enum_t, std::uint32_t)> BindTexture = nullptr;
			function<void(enum_t, enum_t)> BlendFunc = nullptr;
			function<void(enum_t, std::ptrdiff_t, const void *, enum_t)> BufferData = nullptr;
			function<void(enum_t, std::ptrdiff_t, std::ptrdiff_t, const void *)> BufferSubData = nullptr;
			function<void(bitfield_t)> Clear = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t, std::int32_t)> ClearColorx = nullptr;
			function<void(std::int32_t)> ClearDepthx = nullptr;
			function<void(std::int32_t)> ClearStencil = nullptr;
			function<void(enum_t)> ClientActiveTexture = nullptr;
			function<void(enum_t, const std::int32_t *)> ClipPlanex = nullptr;
			function<void(std::uint8_t, std::uint8_t, std::uint8_t, std::uint8_t)> Color4ub = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t, std::int32_t)> Color4x = nullptr;
			function<void(boolean_t, boolean_t, boolean_t, boolean_t)> ColorMask = nullptr;
			function<void(std::int32_t, enum_t, std::int32_t, const void *)> ColorPointer = nullptr;
			function<void(enum_t, std::int32_t, enum_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, const void *)> CompressedTexImage2D = nullptr;
			function<void(enum_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, enum_t, std::int32_t, const void *)> CompressedTexSubImage2D = nullptr;
			function<void(enum_t, std::int32_t, enum_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t)> CopyTexImage2D = nullptr;
			function<void(enum_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t)> CopyTexSubImage2D = nullptr;
			function<void(enum_t)> CullFace = nullptr;
			function<void(std::int32_t, const std::uint32_t *)> DeleteBuffers = nullptr;
			function<void(std::int32_t, const std::uint32_t *)> DeleteTextures = nullptr;
			function<void(enum_t)> DepthFunc = nullptr;
			function<void(boolean_t)> DepthMask = nullptr;
			function<void(std::int32_t, std::int32_t)> DepthRangex = nullptr;
			function<void(enum_t)> Disable = nullptr;
			function<void(enum_t)> DisableClientState = nullptr;
			function<void(enum_t, std::int32_t, std::int32_t)> DrawArrays = nullptr;
			function<void(enum_t, std::int32_t, enum_t, const void *)> DrawElements = nullptr;
			function<void(enum_t)> Enable = nullptr;
			function<void(enum_t)> EnableClientState = nullptr;
			function<void()> Finish = nullptr;
			function<void()> Flush = nullptr;
			function<void(enum_t, std::int32_t)> Fogx = nullptr;
			function<void(enum_t, const std::int32_t *)> Fogxv = nullptr;
			function<void(enum_t)> FrontFace = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t)> Frustumx = nullptr;
			function<void(enum_t, boolean_t *)> GetBooleanv = nullptr;
			function<void(enum_t, enum_t, std::int32_t *)> GetBufferParameteriv = nullptr;
			function<void(enum_t, std::int32_t *)> GetClipPlanex = nullptr;
			function<void(std::int32_t, std::uint32_t *)> GenBuffers = nullptr;
			function<void(std::int32_t, std::uint32_t *)> GenTextures = nullptr;
			function<enum_t()> GetError = nullptr;
			function<void(enum_t, std::int32_t *)> GetFixedv = nullptr;
			function<void(enum_t, std::int32_t *)> GetIntegerv = nullptr;
			function<void(enum_t, enum_t, std::int32_t *)> GetLightxv = nullptr;
			function<void(enum_t, enum_t, std::int32_t *)> GetMaterialxv = nullptr;
			function<void(enum_t, void **)> GetPointerv = nullptr;
			function<const std::uint8_t *(enum_t)> GetString = nullptr;
			function<void(enum_t, enum_t, std::int32_t *)> GetTexEnviv = nullptr;
			function<void(enum_t, enum_t, std::int32_t *)> GetTexEnvxv = nullptr;
			function<void(enum_t, enum_t, std::int32_t *)> GetTexParameteriv = nullptr;
			function<void(enum_t, enum_t, std::int32_t *)> GetTexParameterxv = nullptr;
			function<void(enum_t, enum_t)> Hint = nullptr;
			function<boolean_t(std::uint32_t)> IsBuffer = nullptr;
			function<boolean_t(enum_t)> IsEnabled = nullptr;
			function<boolean_t(std::uint32_t)> IsTexture = nullptr;
			function<void(enum_t, std::int32_t)> LightModelx = nullptr;
			function<void(enum_t, const std::int32_t *)> LightModelxv = nullptr;
			function<void(enum_t, enum_t, std::int32_t)> Lightx = nullptr;
			function<void(enum_t, enum_t, const std::int32_t *)> Lightxv = nullptr;
			function<void(std::int32_t)> LineWidthx = nullptr;
			function<void()> LoadIdentity = nullptr;
			function<void(const std::int32_t *)> LoadMatrixx = nullptr;
			function<void(enum_t)> LogicOp = nullptr;
			function<void(enum_t, enum_t, std::int32_t)> Materialx = nullptr;
			function<void(enum_t, enum_t, const std::int32_t *)> Materialxv = nullptr;
			function<void(enum_t)> MatrixMode = nullptr;
			function<void(const std::int32_t *)> MultMatrixx = nullptr;
			function<void(enum_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t)> MultiTexCoord4x = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t)> Normal3x = nullptr;
			function<void(enum_t, std::int32_t, const void *)> NormalPointer = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t)> Orthox = nullptr;
			function<void(enum_t, std::int32_t)> PixelStorei = nullptr;
			function<void(enum_t, std::int32_t)> PointParameterx = nullptr;
			function<void(enum_t, const std::int32_t *)> PointParameterxv = nullptr;
			function<void(std::int32_t)> PointSizex = nullptr;
			function<void(std::int32_t, std::int32_t)> PolygonOffsetx = nullptr;
			function<void()> PopMatrix = nullptr;
			function<void()> PushMatrix = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t, std::int32_t, enum_t, enum_t, void *)> ReadPixels = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t, std::int32_t)> Rotatex = nullptr;
			function<void(float32_t, boolean_t)> SampleCoverage = nullptr;
			function<void(std::int32_t, boolean_t)> SampleCoveragex = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t)> Scalex = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t, std::int32_t)> Scissor = nullptr;
			function<void(enum_t)> ShadeModel = nullptr;
			function<void(enum_t, std::int32_t, std::uint32_t)> StencilFunc = nullptr;
			function<void(std::uint32_t)> StencilMask = nullptr;
			function<void(enum_t, enum_t, enum_t)> StencilOp = nullptr;
			function<void(std::int32_t, enum_t, std::int32_t, const void *)> TexCoordPointer = nullptr;
			function<void(enum_t, enum_t, std::int32_t)> TexEnvi = nullptr;
			function<void(enum_t, enum_t, std::int32_t)> TexEnvx = nullptr;
			function<void(enum_t, enum_t, const std::int32_t *)> TexEnviv = nullptr;
			function<void(enum_t, enum_t, const std::int32_t *)> TexEnvxv = nullptr;
			function<void(enum_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, enum_t, enum_t, const void *)> TexImage2D = nullptr;
			function<void(enum_t, enum_t, std::int32_t)> TexParameteri = nullptr;
			function<void(enum_t, enum_t, std::int32_t)> TexParameterx = nullptr;
			function<void(enum_t, enum_t, const std::int32_t *)> TexParameteriv = nullptr;
			function<void(enum_t, enum_t, const std::int32_t *)> TexParameterxv = nullptr;
			function<void(enum_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, std::int32_t, enum_t, enum_t, const void *)> TexSubImage2D = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t)> Translatex = nullptr;
			function<void(std::int32_t, enum_t, std::int32_t, const void *)> VertexPointer = nullptr;
			function<void(std::int32_t, std::int32_t, std::int32_t, std::int32_t)> Viewport = nullptr;
		public:
			api(const api&) = default;
			api& operator = (const api&) = default;
			api() = default;
		public:
		};
		void load(api&, std::function<void*(const char*)>);
	}
}

#endif